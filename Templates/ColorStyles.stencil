// swiftlint:disable all
// Generated using Fugen: https://github.com/almazrafi/Fugen
{% if colorStyles %}
{% set accessModifier %}{% if options.publicAccess %}public{% else %}internal{% endif %}{% endset %}
{% set styleTypeName %}{{options.styleTypeName|default:"ColorStyle"}}{% endset %}
{% set colorTypeName %}{{options.colorTypeName|default:"UIColor"}}{% endset %}
{% macro propertyName name %}{{name|swiftIdentifier:"pretty"|lowerFirstWord|escapeReservedKeywords}}{% endmacro %}
{% macro rgbHexString color %}#{{color.red}}{{color.green}}{{color.blue}}{% endmacro %}
{% macro rgbaHexString color %}{% call rgbHexString color %}{{color.alpha}}{% endmacro %}
{% macro rgbString color %}{{color.red|hexToInt}} {{color.green|hexToInt}} {{color.blue|hexToInt}}{% endmacro %}
{% macro rgbaString color %}{% call rgbString color %}, {{color.alpha|hexToInt|int255toFloat|percent}}{% endmacro %}
{% macro styleModifier propertyName propertyTypeName %}
    {% set methodName %}with{{propertyName|upperFirstLetter}}{% endset %}
    {{accessModifier}} func {{methodName}}(_ {{propertyName}}: {{propertyTypeName}}) -> {{styleTypeName}} {
        return {{styleTypeName}}(
            red: red,
            green: green,
            blue: blue,
            alpha: alpha
        )
    }
{% endmacro %}
#if canImport(UIKit)
import UIKit
#else
import AppKit
#endif

{{accessModifier}} struct {{styleTypeName}}: Equatable {

    // MARK: - Type Properties
{% for style in colorStyles %}

    /// {{style.name}}
    ///
    /// Hex {% call rgbaHexString style.color %}; rgba {% call rgbaString style.color %}
    {{accessModifier}} static let {% call propertyName style.name %} = {{styleTypeName}}(
        red: {{ style.color.red|hexToInt|int255toFloat }},
        green: {{ style.color.green|hexToInt|int255toFloat }},
        blue: {{ style.color.blue|hexToInt|int255toFloat }},
        alpha: {{ style.color.alpha|hexToInt|int255toFloat }}
    )
{% endfor %}

    // MARK: - Instance Properties

    {{accessModifier}} let red: CGFloat
    {{accessModifier}} let green: CGFloat
    {{accessModifier}} let blue: CGFloat
    {{accessModifier}} let alpha: CGFloat

    {{accessModifier}} var color: {{colorTypeName}} {
        return {{colorTypeName}}(style: self)
    }

    // MARK: - Initializers

    {{accessModifier}} init(red: CGFloat, green: CGFloat, blue: CGFloat, alpha: CGFloat = 1.0) {
        self.red = red
        self.green = green
        self.blue = blue
        self.alpha = alpha
    }

    // MARK: - Instance Methods

    {% call styleModifier "red" "CGFloat" %}

    {% call styleModifier "green" "CGFloat" %}

    {% call styleModifier "blue" "CGFloat" %}

    {% call styleModifier "alpha" "CGFloat" %}
}

{{accessModifier}} extension {{colorTypeName}} {

    // MARK: - Initializers

    convenience init(style: {{styleTypeName}}) {
        self.init(red: style.red, green: style.green, blue: style.blue, alpha: style.alpha)
    }
}
{% else %}
// No color style found
{% endif %}
// swiftlint:enable all
