{% include "FileHeader.stencil" %}
{% if colorStyles %}
{% set accessModifier %}{% if options.publicAccess %}public{% else %}internal{% endif %}{% endset %}
{% set styleTypeName %}{{ options.styleTypeName|default:"ColorStyle" }}{% endset %}
{% set colorTypeName %}{{ options.colorTypeName|default:"UIColor" }}{% endset %}
{% macro propertyName name %}{{ name|swiftIdentifier:"pretty"|lowerFirstWord|escapeReservedKeywords }}{% endmacro %}
{% macro styleMutator propertyName propertyTypeName %}
    {% set methodName %}with{{ propertyName|upperFirstLetter }}{% endset %}
    {{ accessModifier }} func {{ methodName }}(_ {{propertyName}}: {{ propertyTypeName }}) -> {{ styleTypeName }} {
        return {{ styleTypeName }}(
            red: red,
            green: green,
            blue: blue,
            alpha: alpha
        )
    }
{% endmacro %}

#if canImport(UIKit)
import UIKit
#else
import AppKit
#endif

{{ accessModifier }} struct {{ styleTypeName }}: Equatable {

    // MARK: - Type Properties
{% for style in colorStyles %}

    /// {{ style.name }}
    ///
    /// {{ style.color|colorInfo }}
    {{ accessModifier }} static let {% call propertyName style.name %} = {{ styleTypeName }}(
        red: {{ style.color.red }},
        green: {{ style.color.green }},
        blue: {{ style.color.blue }},
        alpha: {{ style.color.alpha }}
    )
{% endfor %}

    // MARK: - Instance Properties

    {{ accessModifier }} let red: CGFloat
    {{ accessModifier }} let green: CGFloat
    {{ accessModifier }} let blue: CGFloat
    {{ accessModifier }} let alpha: CGFloat

    {{ accessModifier }} var color: {{ colorTypeName }} {
        return {{ colorTypeName }}(style: self)
    }

    // MARK: - Initializers

    {{ accessModifier }} init(red: CGFloat, green: CGFloat, blue: CGFloat, alpha: CGFloat = 1.0) {
        self.red = red
        self.green = green
        self.blue = blue
        self.alpha = alpha
    }

    // MARK: - Instance Methods

    {% call styleMutator "red" "CGFloat" %}

    {% call styleMutator "green" "CGFloat" %}

    {% call styleMutator "blue" "CGFloat" %}

    {% call styleMutator "alpha" "CGFloat" %}
}

{{ accessModifier }} extension {{ colorTypeName }} {

    // MARK: - Initializers

    convenience init(style: {{ styleTypeName }}) {
        self.init(red: style.red, green: style.green, blue: style.blue, alpha: style.alpha)
    }
}
{% else %}
// No color style found
{% endif %}
