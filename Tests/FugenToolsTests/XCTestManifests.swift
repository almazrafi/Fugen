#if !canImport(ObjectiveC)
import XCTest

extension DictionaryEncoderTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__DictionaryEncoderTests = [
        ("testThatEncoderFailsWhenEncodingArray", testThatEncoderFailsWhenEncodingArray),
        ("testThatEncoderFailsWhenEncodingMultipleSingleValuesForKey", testThatEncoderFailsWhenEncodingMultipleSingleValuesForKey),
        ("testThatEncoderFailsWhenEncodingNanFloat", testThatEncoderFailsWhenEncodingNanFloat),
        ("testThatEncoderFailsWhenEncodingNegativeInfinityFloat", testThatEncoderFailsWhenEncodingNegativeInfinityFloat),
        ("testThatEncoderFailsWhenEncodingPositiveInfinityFloat", testThatEncoderFailsWhenEncodingPositiveInfinityFloat),
        ("testThatEncoderFailsWhenEncodingSingleValue", testThatEncoderFailsWhenEncodingSingleValue),
        ("testThatEncoderFailsWhenEncodingWithMultipleSingleValueContainers", testThatEncoderFailsWhenEncodingWithMultipleSingleValueContainers),
        ("testThatEncoderSucceedsWhenEncodingData", testThatEncoderSucceedsWhenEncodingData),
        ("testThatEncoderSucceedsWhenEncodingDataToBase64", testThatEncoderSucceedsWhenEncodingDataToBase64),
        ("testThatEncoderSucceedsWhenEncodingDataUsingCustomFunction", testThatEncoderSucceedsWhenEncodingDataUsingCustomFunction),
        ("testThatEncoderSucceedsWhenEncodingDate", testThatEncoderSucceedsWhenEncodingDate),
        ("testThatEncoderSucceedsWhenEncodingDateToISO8601Format", testThatEncoderSucceedsWhenEncodingDateToISO8601Format),
        ("testThatEncoderSucceedsWhenEncodingDateToMillisecondsSince1970", testThatEncoderSucceedsWhenEncodingDateToMillisecondsSince1970),
        ("testThatEncoderSucceedsWhenEncodingDateToSecondsSince1970", testThatEncoderSucceedsWhenEncodingDateToSecondsSince1970),
        ("testThatEncoderSucceedsWhenEncodingDateUsingCustomFunction", testThatEncoderSucceedsWhenEncodingDateUsingCustomFunction),
        ("testThatEncoderSucceedsWhenEncodingDateUsingFormatter", testThatEncoderSucceedsWhenEncodingDateUsingFormatter),
        ("testThatEncoderSucceedsWhenEncodingEmptyDictionary", testThatEncoderSucceedsWhenEncodingEmptyDictionary),
        ("testThatEncoderSucceedsWhenEncodingEmptyStruct", testThatEncoderSucceedsWhenEncodingEmptyStruct),
        ("testThatEncoderSucceedsWhenEncodingNestedArrayOfStringToIntDictionaries", testThatEncoderSucceedsWhenEncodingNestedArrayOfStringToIntDictionaries),
        ("testThatEncoderSucceedsWhenEncodingNestedStringToIntDictionary", testThatEncoderSucceedsWhenEncodingNestedStringToIntDictionary),
        ("testThatEncoderSucceedsWhenEncodingNonConformingFloatToString", testThatEncoderSucceedsWhenEncodingNonConformingFloatToString),
        ("testThatEncoderSucceedsWhenEncodingStringToArrayDictionary", testThatEncoderSucceedsWhenEncodingStringToArrayDictionary),
        ("testThatEncoderSucceedsWhenEncodingStringToBoolDictionary", testThatEncoderSucceedsWhenEncodingStringToBoolDictionary),
        ("testThatEncoderSucceedsWhenEncodingStringToDoubleDictionary", testThatEncoderSucceedsWhenEncodingStringToDoubleDictionary),
        ("testThatEncoderSucceedsWhenEncodingStringToFloatDictionary", testThatEncoderSucceedsWhenEncodingStringToFloatDictionary),
        ("testThatEncoderSucceedsWhenEncodingStringToInt16Dictionary", testThatEncoderSucceedsWhenEncodingStringToInt16Dictionary),
        ("testThatEncoderSucceedsWhenEncodingStringToInt32Dictionary", testThatEncoderSucceedsWhenEncodingStringToInt32Dictionary),
        ("testThatEncoderSucceedsWhenEncodingStringToInt64Dictionary", testThatEncoderSucceedsWhenEncodingStringToInt64Dictionary),
        ("testThatEncoderSucceedsWhenEncodingStringToInt8Dictionary", testThatEncoderSucceedsWhenEncodingStringToInt8Dictionary),
        ("testThatEncoderSucceedsWhenEncodingStringToIntDictionary", testThatEncoderSucceedsWhenEncodingStringToIntDictionary),
        ("testThatEncoderSucceedsWhenEncodingStringToStringDictionary", testThatEncoderSucceedsWhenEncodingStringToStringDictionary),
        ("testThatEncoderSucceedsWhenEncodingStringToUInt16Dictionary", testThatEncoderSucceedsWhenEncodingStringToUInt16Dictionary),
        ("testThatEncoderSucceedsWhenEncodingStringToUInt32Dictionary", testThatEncoderSucceedsWhenEncodingStringToUInt32Dictionary),
        ("testThatEncoderSucceedsWhenEncodingStringToUInt64Dictionary", testThatEncoderSucceedsWhenEncodingStringToUInt64Dictionary),
        ("testThatEncoderSucceedsWhenEncodingStringToUInt8Dictionary", testThatEncoderSucceedsWhenEncodingStringToUInt8Dictionary),
        ("testThatEncoderSucceedsWhenEncodingStringToUIntDictionary", testThatEncoderSucceedsWhenEncodingStringToUIntDictionary),
        ("testThatEncoderSucceedsWhenEncodingStructInSeparateKeyedContainers", testThatEncoderSucceedsWhenEncodingStructInSeparateKeyedContainers),
        ("testThatEncoderSucceedsWhenEncodingStructInSeparateKeyedContainersOfUnkeyedContainer", testThatEncoderSucceedsWhenEncodingStructInSeparateKeyedContainersOfUnkeyedContainer),
        ("testThatEncoderSucceedsWhenEncodingStructInSeparateNestedKeyedContainers", testThatEncoderSucceedsWhenEncodingStructInSeparateNestedKeyedContainers),
        ("testThatEncoderSucceedsWhenEncodingStructInSeparateUnkeyedContainers", testThatEncoderSucceedsWhenEncodingStructInSeparateUnkeyedContainers),
        ("testThatEncoderSucceedsWhenEncodingStructUsingCustomFunctionForKeys", testThatEncoderSucceedsWhenEncodingStructUsingCustomFunctionForKeys),
        ("testThatEncoderSucceedsWhenEncodingStructUsingDefaultKeys", testThatEncoderSucceedsWhenEncodingStructUsingDefaultKeys),
        ("testThatEncoderSucceedsWhenEncodingStructWithMultipleProperties", testThatEncoderSucceedsWhenEncodingStructWithMultipleProperties),
        ("testThatEncoderSucceedsWhenEncodingStructWithNestedEnum", testThatEncoderSucceedsWhenEncodingStructWithNestedEnum),
        ("testThatEncoderSucceedsWhenEncodingStructWithNestedStruct", testThatEncoderSucceedsWhenEncodingStructWithNestedStruct),
        ("testThatEncoderSucceedsWhenEncodingSubclass", testThatEncoderSucceedsWhenEncodingSubclass),
        ("testThatEncoderSucceedsWhenEncodingSubclassUsingSuperEncoder", testThatEncoderSucceedsWhenEncodingSubclassUsingSuperEncoder),
        ("testThatEncoderSucceedsWhenEncodingSubclassUsingSuperEncoderForKeys", testThatEncoderSucceedsWhenEncodingSubclassUsingSuperEncoderForKeys),
        ("testThatEncoderSucceedsWhenEncodingSubclassUsingSuperEncoderOfNestedUnkeyedContainer", testThatEncoderSucceedsWhenEncodingSubclassUsingSuperEncoderOfNestedUnkeyedContainer),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(DictionaryEncoderTests.__allTests__DictionaryEncoderTests),
    ]
}
#endif
